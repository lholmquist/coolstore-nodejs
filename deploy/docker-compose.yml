version: '3.7'

services:
    zookeeper:
        image: quay.io/strimzi/kafka:0.31.1-kafka-3.2.3
        command: [
            "sh", "-c",
            "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
            - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs
    kafka:
        image: quay.io/strimzi/kafka:0.31.1-kafka-3.2.3
        command: [
            "sh", "-c",
            "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    cartCache:
        image: redis:latest
        container_name: cartCache
        command: redis-server --save 20 1 --loglevel warning
        restart: always
        ports:
            - 6379:6379
        volumes:
            - /data
    coolstoreDB:
        image: mongo:latest
        container_name: coolstoreDB
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
            MONGO_INITDB_DATABASE: Coolstore
        ports:
            - 27017:27017
        volumes:
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    frontend:
        build: ../front-end
        ports:
            - 8081:8081
    orderservice:
        depends_on:
            - kafka
            - coolstoreDB
        build: ../order-service
        ports:
            - 3000:3000
        environment:
            - MY_CLUSTER_KAFKA_BOOTSTRAP_SERVICE_HOST=kafka
            - COOLSTORE_DB_SERVICE_HOST=coolstoreDB
    paymentservice:
        depends_on:
            - kafka
        build: ../payment-service
        ports:
            - 3001:3001
        environment:
            - MY_CLUSTER_KAFKA_BOOTSTRAP_SERVICE_HOST=kafka
    cartservice:
        depends_on:
            - coolstoreDB
            - cartCache
            - kafka
        build: ../cart-service
        ports:
            - 7074:7074
        environment:
            - REDIS_SERVICE_HOST=cartCache
            - MY_CLUSTER_KAFKA_BOOTSTRAP_SERVICE_HOST=kafka
    inventoryservice:
        depends_on:
            - coolstoreDB
        build: ../inventory-service
        restart: unless-stopped
        ports:
            - 8080:8080
        environment:
            - COOLSTORE_DB_SERVICE_HOST=coolstoreDB
    catalogservice:
        depends_on:
            - coolstoreDB
        build: ../catalog-service
        restart: unless-stopped
        ports:
            - 7072:7072
        environment:
            - COOLSTORE_DB_SERVICE_HOST=coolstoreDB
            - INVENTORY_SERVICE_HOST=inventoryservice